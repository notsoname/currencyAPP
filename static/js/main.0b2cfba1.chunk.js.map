{"version":3,"sources":["CurrencyRow.js","App.js","index.js"],"names":["CurrencyRow","current","selectedCurency","onChangeCurrancy","amount","onChangeAmount","type","value","onChange","map","option","_apiUrl","App","toAmount","fromAmount","useState","setCurrent","fromCurrency","setFromCurrency","toCurrency","setToCurrency","exchangeRate","setExchangeRate","setAmount","amountInFromCurrency","setAmountInFromCurrency","useEffect","axios","get","then","res","firstCurrancy","Object","keys","data","rates","base","console","log","e","target","className","ReactDOM","render","document","getElementById"],"mappings":"6LAEe,SAASA,EAAT,GAA4F,IAAtEC,EAAqE,EAArEA,QAASC,EAA4D,EAA5DA,gBAAiBC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,eACrF,OACI,gCACI,uBAAOC,KAAK,SAASC,MAAOH,EAAQI,SAAUH,IAC9C,wBAAQE,MAAOL,EAAiBM,SAAUL,EAA1C,SACKF,EAAQQ,KAAI,SAAAC,GAAM,OACf,wBAAqBH,MAAOG,EAA5B,SAAqCA,GAAxBA,W,0BCH3BC,EAAU,oFACD,SAASC,IAAO,IAQvBC,EAAUC,EARY,EACGC,mBAAS,IADZ,mBACpBd,EADoB,KACXe,EADW,OAEaD,qBAFb,mBAEpBE,EAFoB,KAENC,EAFM,OAGSH,qBAHT,mBAGpBI,EAHoB,KAGRC,EAHQ,OAIaL,qBAJb,mBAIpBM,EAJoB,KAINC,EAJM,OAKCP,mBAAS,GALV,mBAKpBX,EALoB,KAKZmB,EALY,OAM6BR,oBAAS,GANtC,mBAMpBS,EANoB,KAMEC,EANF,KAiD1B,OAxCID,GACAV,EAAaV,EACbS,EAAWT,EAASiB,IAEpBR,EAAWT,EACXU,EAAaV,EAASiB,GAG1BK,qBAAU,WACNC,IACKC,IAAIjB,GACJkB,MAAK,SAAAC,GACF,IAAMC,EAAgBC,OAAOC,KAAKH,EAAII,KAAKC,OAAO,GAClDnB,EAAW,CAACc,EAAII,KAAKE,MAAX,mBAAoBJ,OAAOC,KAAKH,EAAII,KAAKC,UACnDjB,EAAgBY,EAAII,KAAKE,MACzBhB,EAAcW,GACdT,EAAgBQ,EAAII,KAAKC,MAAMJ,IAC/BM,QAAQC,IAAIR,EAAII,KAAKE,WAE9B,IAEHV,qBAAU,WACc,MAAhBT,GAAqC,MAAbE,GACxBQ,IACCC,IADD,UACQjB,EADR,iBACwBM,EADxB,oBACgDE,IAC/CU,MAAK,SAAAC,GACFR,EAAgBQ,EAAII,KAAKC,MAAMhB,SAGxC,CAACF,EAAcE,IAYd,gCACI,0CACA,cAACnB,EAAD,CACAC,QAASA,EACTC,gBAAiBe,EACjBd,iBAAoB,SAAAoC,GAAC,OAAIrB,EAAgBqB,EAAEC,OAAOjC,QAClDH,OAAUU,EACVT,eAjBR,SAAgCkC,GAC5BhB,EAAUgB,EAAEC,OAAOjC,OACnBkB,GAAwB,MAiBpB,qBAAKgB,UAAU,QAAf,eACA,cAACzC,EAAD,CACAC,QAASA,EACTC,gBAAiBiB,EACjBhB,iBAAoB,SAAAoC,GAAC,OAAInB,EAAcmB,EAAEC,OAAOjC,QAChDH,OAAUS,EACVR,eArBR,SAA8BkC,GAC1BhB,EAAUgB,EAAEC,OAAOjC,OACnBkB,GAAwB,SC/ChCiB,IAASC,OACD,cAAC/B,EAAD,IACLgC,SAASC,eAAe,W","file":"static/js/main.0b2cfba1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function CurrencyRow({current, selectedCurency, onChangeCurrancy, amount, onChangeAmount}) {\r\n    return (\r\n        <div>\r\n            <input type='number' value={amount} onChange={onChangeAmount}/>\r\n            <select value={selectedCurency} onChange={onChangeCurrancy}>\r\n                {current.map(option => (\r\n                    <option key={option} value={option}>{option}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useState } from 'react'\r\nimport CurrencyRow from './CurrencyRow'\r\nimport './app.css'\r\nimport axios from 'axios';\r\n\r\nconst _apiUrl = 'http://api.exchangeratesapi.io/latest?access_key=3c3f13d33e52e674e0a86595ddf7f5d0';\r\nexport default function App() {\r\n    const[current, setCurrent] = useState([])\r\n    const[fromCurrency, setFromCurrency] = useState()\r\n    const[toCurrency, setToCurrency] = useState()\r\n    const[exchangeRate, setExchangeRate] = useState()\r\n    const[amount, setAmount] = useState(1)\r\n    const[amountInFromCurrency, setAmountInFromCurrency] = useState(true)\r\n\r\n    let toAmount, fromAmount\r\n    if (amountInFromCurrency) {\r\n        fromAmount = amount\r\n        toAmount = amount * exchangeRate\r\n    } else {\r\n        toAmount = amount\r\n        fromAmount = amount / exchangeRate\r\n    }\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(_apiUrl)\r\n            .then(res => {\r\n                const firstCurrancy = Object.keys(res.data.rates)[0]\r\n                setCurrent([res.data.base, ...Object.keys(res.data.rates)])\r\n                setFromCurrency(res.data.base)\r\n                setToCurrency(firstCurrancy)\r\n                setExchangeRate(res.data.rates[firstCurrancy])\r\n                console.log(res.data.base)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        if (fromCurrency != null && toCurrency !=null) {\r\n            axios\r\n            .get(`${_apiUrl}&base=${fromCurrency}&symbols=${toCurrency}`)\r\n            .then(res => {\r\n                setExchangeRate(res.data.rates[toCurrency])\r\n            })\r\n        }\r\n    }, [fromCurrency, toCurrency])\r\n\r\n    function handleFromAmountChange(e) {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(true)\r\n    }\r\n    function handleToAmountChange(e) {\r\n        setAmount(e.target.value)\r\n        setAmountInFromCurrency(false)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Currency</h1>\r\n            <CurrencyRow\r\n            current={current}\r\n            selectedCurency={fromCurrency}\r\n            onChangeCurrancy = {e => setFromCurrency(e.target.value)}\r\n            amount = {fromAmount}\r\n            onChangeAmount = {handleFromAmountChange}\r\n            />\r\n            <div className='equel'>=</div>\r\n            <CurrencyRow\r\n            current={current}\r\n            selectedCurency={toCurrency}\r\n            onChangeCurrancy = {e => setToCurrency(e.target.value)}\r\n            amount = {toAmount}\r\n            onChangeAmount = {handleToAmountChange}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n        <App />\n  ,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}