{"version":3,"sources":["components/Input/Input.js","components/App/App.js","index.js"],"names":["Input","rates","setCurrency","onChangeCurrency","onChangeAmount","amount","className","type","onChange","value","map","rate","App","state","firstCurrency","secondCurrency","exchangeRates","firstAmount","secondAmount","onChangeFirstCurrency","e","a","setState","target","onSelectCurrency","onChangeSecondCurrency","currency","axios","then","response","current","data","console","log","base","Object","keys","first","second","this","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4RAGe,SAASA,EAAT,GAAgF,IAAhEC,EAA+D,EAA/DA,MAAOC,EAAwD,EAAxDA,YAAaC,EAA2C,EAA3CA,iBAAkBC,EAAyB,EAAzBA,eAAgBC,EAAS,EAATA,OACjF,OACI,sBAAKC,UAAU,SAAf,UACI,uBAAOA,UAAU,qBAAqBC,KAAK,SAASC,SAAUJ,EAAgBK,MAAOJ,IACrF,wBAAQI,MAAOP,EAAaM,SAAUL,EAAtC,SACKF,EAAMS,KAAI,SAAAC,GAAI,OACX,wBAAmBF,MAAOE,EAA1B,SAAiCA,GAApBA,W,iBCJZC,E,4MACjBC,MAAQ,CACJZ,MAAO,GACPa,cAAe,GACfC,eAAgB,GAChBV,OAAQ,EACRW,cAAe,GACfC,YAAa,IACbC,aAAc,K,EAmBlBC,sB,uCAAwB,WAAOC,GAAP,SAAAC,EAAA,sEACd,EAAKC,SAAS,CAChBR,cAAeM,EAAEG,OAAOd,QAFR,OAIpB,EAAKe,mBAJe,2C,wDAMxBC,uB,uCAAyB,WAAOL,GAAP,SAAAC,EAAA,sEACf,EAAKC,SAAS,CAChBP,eAAgBK,EAAEG,OAAOd,QAFR,OAIrB,EAAKe,mBAJgB,2C,wDAQzBpB,eAAiB,SAACgB,EAAGM,GACjB,GAAiB,MAAbA,EAAkB,CAClB,IAAMH,EAASH,EAAEG,OAAOd,MACxB,EAAKa,SAAS,CACVL,YAAaM,EACbL,aAAcK,EAAS,EAAKV,MAAMG,qBAEnC,GAAiB,MAAbU,EAAkB,CACzB,IAAMH,EAASH,EAAEG,OAAOd,MACxB,EAAKa,SAAS,CACVJ,aAAcK,EACdN,YAAaM,EAAS,EAAKV,MAAMG,kB,EAM7CQ,iBAAmB,WACfG,MAAA,sDAAyD,EAAKd,MAAMC,cAApE,oBAA6F,EAAKD,MAAME,iBACnGa,MAAK,SAAAC,GACF,IAAMC,EAAUD,EAASE,KAAK9B,MAAM,EAAKY,MAAME,gBAC/C,EAAKO,SAAS,CACVN,cAAec,EACfZ,aAAc,EAAKL,MAAMI,YAAca,IAE3CE,QAAQC,IAAI,EAAKpB,MAAMG,eACvBgB,QAAQC,IAAIJ,EAASE,U,uDAxDjC,WAAsB,IAAD,OACjBJ,MAAA,0CACCC,MAAM,SAAAC,GACH,IAAM5B,EAAK,CAAK4B,EAASE,KAAKG,MAAnB,mBAA2BC,OAAOC,KAAKP,EAASE,KAAK9B,SAC1DoC,EAAQR,EAASE,KAAKG,KACtBI,EAASH,OAAOC,KAAKP,EAASE,KAAK9B,OAAO,GAChD,EAAKqB,SAAS,CACVrB,MAAOA,EACPa,cAAeuB,EACftB,eAAgBuB,EAChBtB,cAAea,EAASE,KAAK9B,MAAMqC,U,oBAoD/C,WAAU,IAAD,OACL,OACI,sBAAKhC,UAAU,mEAAf,UACI,qBAAKA,UAAU,QAAf,0BACA,cAACN,EAAD,CAAOC,MAAOsC,KAAK1B,MAAMZ,MACzBC,YAAaqC,KAAK1B,MAAMC,cACxBX,iBAAkBoC,KAAKpB,sBACvBd,OAAQkC,KAAK1B,MAAMI,YACnBb,eAAgB,SAACgB,GAAO,EAAKhB,eAAegB,EAAE,QAC9C,qCACA,cAACpB,EAAD,CAAOC,MAAOsC,KAAK1B,MAAMZ,MACzBC,YAAaqC,KAAK1B,MAAME,eACxBZ,iBAAkBoC,KAAKd,uBACvBpB,OAAQkC,KAAK1B,MAAMK,aACnBd,eAAgB,SAACgB,GAAO,EAAKhB,eAAegB,EAAE,e,GAvF7BoB,a,MCGjCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.606c4ffe.chunk.js","sourcesContent":["import React from 'react'\r\nimport './input.css'\r\n\r\nexport default function Input({rates, setCurrency, onChangeCurrency, onChangeAmount, amount}) {\r\n    return (\r\n        <div className='d-flex'>\r\n            <input className='form-control input' type='number' onChange={onChangeAmount} value={amount}/>\r\n            <select value={setCurrency} onChange={onChangeCurrency}>\r\n                {rates.map(rate => (\r\n                    <option key={rate} value={rate}>{rate}</option>\r\n                ))}\r\n            </select>\r\n        </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport Input from '../Input/Input'\r\nimport './App.css'\r\nimport * as axios from 'axios'\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        rates: [],\r\n        firstCurrency: '',\r\n        secondCurrency: '',\r\n        amount: 1,\r\n        exchangeRates: '',\r\n        firstAmount: '0',\r\n        secondAmount: '0',\r\n    }\r\n   \r\n    componentDidMount()  {\r\n        axios.get(`https://api.exchangeratesapi.io/latest`)\r\n        .then( response => {\r\n            const rates = ([response.data.base,...Object.keys(response.data.rates)])\r\n            const first = response.data.base\r\n            const second = Object.keys(response.data.rates)[1]\r\n            this.setState({\r\n                rates: rates,\r\n                firstCurrency: first,\r\n                secondCurrency: second,\r\n                exchangeRates: response.data.rates[second]\r\n            })  \r\n        });\r\n    }\r\n\r\n\r\n    onChangeFirstCurrency = async (e) => {\r\n        await this.setState({\r\n            firstCurrency: e.target.value,\r\n        })\r\n        this.onSelectCurrency()\r\n    }\r\n    onChangeSecondCurrency = async (e) => {\r\n        await this.setState({\r\n            secondCurrency: e.target.value\r\n        })\r\n        this.onSelectCurrency()\r\n    }\r\n\r\n\r\n    onChangeAmount = (e, currency) => {\r\n        if (currency === 'A') {\r\n            const target = e.target.value\r\n            this.setState({\r\n                firstAmount: target,\r\n                secondAmount: target * this.state.exchangeRates\r\n            })\r\n        } else if (currency === 'B') {\r\n            const target = e.target.value\r\n            this.setState({\r\n                secondAmount: target,\r\n                firstAmount: target / this.state.exchangeRates\r\n            })\r\n        }\r\n    }\r\n\r\n\r\n    onSelectCurrency = () => {\r\n        axios.get(`https://api.exchangeratesapi.io/latest?base=${this.state.firstCurrency}&symbols=${this.state.secondCurrency}`)\r\n            .then(response => {\r\n                const current = response.data.rates[this.state.secondCurrency]\r\n                this.setState({\r\n                    exchangeRates: current,\r\n                    secondAmount: this.state.firstAmount * current\r\n                })\r\n                console.log(this.state.exchangeRates)\r\n                console.log(response.data)\r\n            })\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className='d-flex justify-content-center align-items-center flex-column app'>\r\n                <div className='title'>Currency app</div>\r\n                <Input rates={this.state.rates}\r\n                setCurrency={this.state.firstCurrency}\r\n                onChangeCurrency={this.onChangeFirstCurrency}\r\n                amount={this.state.firstAmount}\r\n                onChangeAmount={(e) => {this.onChangeAmount(e,'A')}}/>\r\n                <span>=</span>\r\n                <Input rates={this.state.rates}\r\n                setCurrency={this.state.secondCurrency}\r\n                onChangeCurrency={this.onChangeSecondCurrency}\r\n                amount={this.state.secondAmount}\r\n                onChangeAmount={(e) => {this.onChangeAmount(e,'B')}}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App/App';\nimport './index.css';\n\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}